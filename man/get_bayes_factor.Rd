% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_bayes_factor.R
\name{get_bayes_factor}
\alias{get_bayes_factor}
\title{Extract bayes factor comparing a model and the same model without the variable of interest}
\usage{
get_bayes_factor(
  model,
  model_null = NULL,
  model_stanr = NULL,
  model_null_stanr = NULL,
  var = NULL,
  silent = TRUE,
  verbose = FALSE,
  log = FALSE
)
}
\arguments{
\item{model:}{a brms::brm() model compiled without "rstan"}

\item{model_null:}{a brms::brm() null model compiled without "rstan"}

\item{model_stanr:}{same "model_null" compiled with "rstan"}

\item{var:}{instead of passing model and model_null the variable of interest can be passed. This will take longer as model_null will be compiled}

\item{silent:}{brms::bayes_factor() option}

\item{verbose:}{brms::bayes_factor() option}

\item{log:}{brms::bayes_factor() option}
}
\value{
A list object composed of: 'bf': brms::bayes_factor() object; 'rstan': model compiled with rstan; 'null': model_null brms::brm() object; 'null_rstan': model_null compiled with rstan
}
\description{
This function extract bayes factor through brms::bayes_factor() comparing a model with the
variable of interest and a null model without the variable of interest.
To speed up the process and avoid re-sampling using default compiler "stanr", if sampling
was operated with "cmdstanr", a compiled but not sampled "stanr" model can be passed to
skip this passage. Otherwise the function will compile it for you.
User can also simply pass the name of the variable of interest and the function will operate
all the rest. But this will take significantly longer as model_null need to be compiled and
sampled. Same for model_null_stanr.
}
